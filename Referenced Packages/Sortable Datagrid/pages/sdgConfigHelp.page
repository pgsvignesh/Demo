<apex:page standardController="sortablegrid__SDG__c" >
   <apex:sectionHeader title="Sortable Data Grids Help" ></apex:sectionHeader>
    <apex:stylesheet value="{!URLFOR($Resource.sortablegrid__SLDS0121, 'assets/styles/salesforce-lightning-design-system-vf.css')}" />

   <div class="slds">
       <div class="slds-text-longform">
       <p>
        Sortable data grids comprise of a master record, and two types of detail records: Fields and Actions. 
    </p>
        <h3 class="slds-text-heading--small slds-m-top--xx-large">Sortable Data Grid</h3>
 
    <p>
        The master record controls how the query is filtered and linked to a parent record.
    </p>
    
      <table class="slds-table slds-table--bordered">
            <thead>
            <tr class="slds-text-heading--label"><td class="slds-cell-wrap"><b>Attribute</b></td><td class="slds-cell-wrap"><b>Purpose</b></td><td class="slds-cell-wrap"><b>Example</b></td></tr></thead>
            <tbody>
              <tr class="slds-hint-parent"><td class="slds-cell-wrap">Name</td><td class="slds-cell-wrap">Config management - not used on display</td><td class="slds-cell-wrap">My sortable grid</td></tr>
              <tr class="slds-hint-parent"><td class="slds-cell-wrap">SDG Tag</td><td class="slds-cell-wrap">unique identifier for a grid configuration.  Not using an ID to make migration easier.</td><td class="slds-cell-wrap">AccOpps</td></tr>
              <tr class="slds-hint-parent"><td class="slds-cell-wrap">sObjectName</td><td class="slds-cell-wrap">API Name for the record to be rendered (provides the base for which all other fields navigate)</td><td class="slds-cell-wrap">Opportunity</td></tr>
              <tr class="slds-hint-parent"><td class="slds-cell-wrap">Parent Field Name</td><td class="slds-cell-wrap">Optional field to use to filter based on a parent record id provided by Lightning.  eg to show only Opportunities for an Account then use account.id  </td><td class="slds-cell-wrap">account.id</td></tr>
               <tr class="slds-hint-parent"><td class="slds-cell-wrap">Filter</td><td class="slds-cell-wrap">Optional field to use to perform server side filter.  For example - only show opportunities that are not yet closed. This filter is not visible to users.</td><td class="slds-cell-wrap">isclosed=false</td></tr>
               
            </tbody>
    </table>
                  <h3 class="slds-text-heading--small slds-m-top--xx-large">Field</h3>
 
    <p>
        The Field record controls which fields are rendered
    </p>
    
         <table class="slds-table slds-table--bordered">
            <thead>
            <tr class="slds-text-heading--label"><td class="slds-cell-wrap"><b>Attribute</b></td><td class="slds-cell-wrap"><b>Purpose</b></td><td class="slds-cell-wrap"><b>Examples</b></td></tr></thead>
            <tbody>
              <tr class="slds-hint-parent"><td class="slds-cell-wrap">APIName</td><td class="slds-cell-wrap">APIName of the field to be rendered.  Supports object traversal.  eg Account.Name</td><td class="slds-cell-wrap">Name<br/>Account.Name<br/>LastModifiedBy.Phone</td></tr>
              <tr class="slds-hint-parent"><td class="slds-cell-wrap">Override Label</td><td class="slds-cell-wrap">Override the default label</td><td class="slds-cell-wrap">Our Amount</td></tr>
              <tr class="slds-hint-parent"><td class="slds-cell-wrap">Field Order</td><td class="slds-cell-wrap">Order of the fields</td><td class="slds-cell-wrap">3</td></tr>
                <tr class="slds-hint-parent"><td class="slds-cell-wrap">Hide Filter</td><td class="slds-cell-wrap">Fields are always displayed, but you can hide the filter for this field if desired</td><td class="slds-cell-wrap">Checked/Unchecked</td></tr>
               <tr class="slds-hint-parent"><td class="slds-cell-wrap">isValid</td><td class="slds-cell-wrap">Needs to be checked to display on page.  If there is an error with the APIName, the system will automatically uncheck this box.</td><td class="slds-cell-wrap">Checked/Unchecked</td></tr>
               <tr class="slds-hint-parent"><td class="slds-cell-wrap">Custom Renderer</td><td class="slds-cell-wrap">Provides a custom renderer for the field - eg convert an id into a hyperlink, or a date into a 'time ago'.</td><td class="slds-cell-wrap">Checked/Unchecked</td></tr>
                
               
            </tbody>
    </table>
                  <h3 class="slds-text-heading--small slds-m-top--xx-large">Action</h3>
 
    <p>
        The Action record controls which actions are rendered.
    </p>
        <table class="slds-table slds-table--bordered">
            <thead>
            <tr class="slds-text-heading--label"><td class="slds-cell-wrap"><b>Attribute</b></td><td class="slds-cell-wrap"><b>Purpose</b></td><td class="slds-cell-wrap"><b>Examples</b></td></tr></thead>
            <tbody>
                <tr class="slds-hint-parent"><td class="slds-cell-wrap">Event</td><td class="slds-cell-wrap">Fully qualified event name.  Component is only able to throw global events and evtObjectManager events.  If you want to use another event, then raise an evtObjectManager event and catch the payload.</td><td class="slds-cell-wrap">e.force.editRecord<br/> e.c:evtObjectManager</td></tr>
              <tr class="slds-hint-parent"><td class="slds-cell-wrap">Action Order</td><td class="slds-cell-wrap">Order of the action</td><td class="slds-cell-wrap">3</td></tr>
                <tr class="slds-hint-parent"><td class="slds-cell-wrap">Requires Creatable</td><td class="slds-cell-wrap">Only show if the current user has Create rights for this object type</td><td class="slds-cell-wrap">Checked/Unchecked</td></tr>
               <tr class="slds-hint-parent"><td class="slds-cell-wrap">Requires Editable</td><td class="slds-cell-wrap">Only show if the current user has Edit rights for this object type</td><td class="slds-cell-wrap">Checked/Unchecked</td></tr>
                <tr class="slds-hint-parent"><td class="slds-cell-wrap">Action Type</td><td class="slds-cell-wrap">Set to either show on a row or on a list</td><td class="slds-cell-wrap">List/Row</td></tr>
                <tr class="slds-hint-parent"><td class="slds-cell-wrap">Event payload</td><td class="slds-cell-wrap">Javascript object payload for event.  Supports merging of sdgField values that are on the grid - using delimited #fieldname# syntax</td><td class="slds-cell-wrap">{ <br/>
"recordId":"#Id#" <br/>
}</td></tr>
               
            </tbody>
    </table>
       </div></div>
</apex:page>